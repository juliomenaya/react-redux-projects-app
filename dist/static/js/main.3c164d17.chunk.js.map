{"version":3,"sources":["components/layouts/SignInLinks.js","store/actions/authActions.js","components/layouts/SignOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectsDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignOutLinks","state","firebase","_ref","links","uid","layouts_SignInLinks","layouts_SignOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorLastName","aothorFirstName","createdAt","toString","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","console","log","match","params","data","authorFirstName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","authIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c164d17.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n/**\r\n * Dando click en \"Log Out\" se liga a la propiedad signOut que es accedida\r\n * por mapDispatchToProps y tiene como valor dispatch(signOut())\r\n * signOut() es la accion que viene desde authActions\r\n * \r\n */\r\n\r\nconst SignInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    /**\r\n     * De esta forma podemos acceder desde el componente SignInLinks a la propiedad\r\n     * signout\r\n     */\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks)\r\n\r\n","\r\n/**\r\n * Estas acciones son las que se llevarán a cabo desde los componentes\r\n * que hagan funciones de autenticacion.\r\n * \r\n * Se crea la accion\r\n * \r\n * Se pasa al reducer donde se encuentra el switch para manejar todas estas acciones\r\n * \r\n * \r\n * \r\n */\r\n\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials:  newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignInLinks from './SignInLinks'\r\nimport SignOutLinks from './SignOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst NavBar = ({ auth, profile }) => {    \r\n    const links = auth.uid ? <SignInLinks profile={profile} /> : <SignOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Julio</Link>\r\n                { links }                                \r\n            </div>            \r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {    \r\n    // Las propiedades de este objeto podrán ser accedidas en el componente\r\n    // por ejemplo se puede hacer la deestruturing de esta foma { auth }     \r\n    return ({\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    })\r\n}\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"gray-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {        \r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                {/* <p>Posted by Julio el Grande</p> */}\r\n                <p>{project.content}</p>\r\n                <p>Posted by {project.authorLastName} {project.aothorFirstName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// recibe props como parametro\r\n// pero se hace la deestructuring, entonces en el cuerpo de la function\r\n// tenemos la propiedad 'projects' que se encuentra en props\r\n\r\nconst ProjectList = ({projects}) => {     \r\n    return (\r\n        <div className=\"project-list section\">\r\n            {/* haciendo la operacion AND, nos aseguramos de que \r\n            el objeto 'projects' tenga algo guardado */}\r\n            {projects && projects.map(project => {                \r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}> {/*liga a ProjectDetails*/}\r\n                         {/* al componente ProjectSummary le enviamos las propiedades project y key*/}\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){          \r\n        // se traduce a \"de this.props, toma la propiedad projects y asignalo\"\r\n        const { projects, auth, notifications } = this.props\r\n             \r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// esta funcion mapea las propiedades que seran utilizadas por el \r\n// componente desde el reduce 'rootReducer' (quien es la combinacion de projectReducer y authReducer)\r\n// rootReducer tiene una propiedad 'project' para indicarle que se debe ligar a 'projectReducer'\r\n// que es donde estan definidos los estados y acciones de project\r\n\r\nconst mapStateToProps = (state) => {    \r\n    return {\r\n        // projects: state.project.projects //Datos hardcodeados\r\n        /**Despues de que se hace la conexion con firestore\r\n         * los datos ya se pueden tomar desde esa base y\r\n         * ya no se usarán los datos que teniamos hardcodeados\r\n         */\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n//higher order component\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] }, // es la coleccion a la que se debe conectar firestore\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux' // Conectar con el store de redux\r\nimport { firestoreConnect } from 'react-redux-firebase' // conectar a la base de datos\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectsDetails = (props) => {\r\n    // const id = props.match.params.id // Obtiene el id enviado desde el Link\r\n    console.log(props)\r\n    const { project } = props        \r\n    const { auth } = props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    \r\n    if (project) {\r\n        return (  \r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action gray lighten-4 grey-text\">\r\n                        <div>{ project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * \r\n * @param {*} state \r\n * @param { *propiedades del componente antes de que algo \r\n * les sea agregado (son las propiedades que recibió el componente desde su padre)} ownProps \r\n */\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state, ownProps)\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: 'projects' }])\r\n)(ProjectsDetails)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to =\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gray-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gray-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        // esto hace una llamada a la funcion mapDispatchToProps\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"gray-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // createProject es una accion exportada desde el archivo projectActions\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","\r\n// El metodo a la vieja escuela\r\n\r\n// const ADD_PROJECT = 'ADD_PROJECT'\r\n// export const createProject = (propject) => {\r\n//     return {\r\n//         type: ADD_PROJECT,\r\n//         project: project\r\n//     }\r\n// }\r\n \r\n// el argumento \r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // console.log(project)\r\n        // se hace la llamada asincrona\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const authorId = getState().firebase.auth.uid        \r\n        firestore.collection('projects').add({\r\n            ...project, // content and title\r\n            aothorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project: project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layouts/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectsDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport './Index.css'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null    \r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n        return {\r\n            ...state, \r\n            authError: 'Login failed'\r\n        }\r\n        case 'LOGIN_SUCCESS':            \r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':            \r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('singup success')\r\n            return {\r\n                ...state,\r\n                authError: null,                \r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }    \r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'how to do a \"how to do video\"', content: 'Hello ma friends!'},\r\n        {id: '2', title: 'how to be a good suplent worker', content: 'For Cardio, you do not even exists'},\r\n        {id: '3', title: 'how to faltosear at the Cardio dinning room', content: 'Ah salu!'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }    \r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\n// Combina los reducers \r\nconst rootReducer = combineReducers({\r\n    // Todas estas propiedades son accedidas en las funciones mapStateToProps\r\n    //entonces para acceder a project desde mapStateToProps se escribe state.project\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD2Br6s_YKNcdOB_8q-c3ofMna-4BaRcTk\",\r\n    authDomain: \"react-redux-projects-app.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-projects-app.firebaseio.com\",\r\n    projectId: \"react-redux-projects-app\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"211754805316\",\r\n    appId: \"1:211754805316:web:0464bf1e64b6326f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore()/*.settings({ timestampsInSnapshots: true })*/\r\n\r\n\r\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport { authIsReady } from 'react-redux-firebase'\nimport firebase from './config/fbConfig'\n\n// thunk es un middleware que nos ayuda a realizar peticiones de forma asincrona\n// se debe utilizar ya que si quisieramos hacer la peticion desde un reducer y actualizar un \n// estado, el propio reducer retornaria un estado indeseado dada la sincronia de la peticion\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase),\n        reactReduxFirebase(firebase, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n)\n// thunk.withExtraArgument() nos permite pasar objetos al applyMiddleware, de esta forma las acciones podrán \n// accedes a estos objetos, que en este caso son utilizados para conectarse a firebase y firestore\n\n// store.attachAuthIsReady.then(() => {\nauthIsReady(store).then(() => { \n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, \n        document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}